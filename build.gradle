plugins {
    id 'java'
    id 'org.springframework.boot' version '2.7.14'
    id 'io.spring.dependency-management' version '1.0.15.RELEASE'
}

group = 'com.example'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '11'

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

/**
 * Gradle은 Maven 종속성 소스를 크게 의존한다.
 */
repositories {
    mavenCentral()
}

dependencies {
    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'
    developmentOnly 'org.springframework.boot:spring-boot-devtools'
    implementation 'org.springframework.boot:spring-boot-starter'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
//    runtimeOnly 'com.h2database:h2'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.slf4j:slf4j-api'

    // 비동기 - javaDSL 제공 [ @Scheduled(fixedRate = 5000)  + @EnableScheduling ]
    testImplementation 'org.awaitility:awaitility:3.1.2'
    
    // 파일 업로드 html 뷰
//    implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'

/*    // 시큐리티 + ldap
    implementation 'org.springframework.boot:spring-boot-starter-security'
    // LDAP 기반 사용자 저장소는 주로 조직의 사용자 인증 및 권한 관리, 전화번호부 서비스, 이메일 시스템의 주소록 등 다양한 디렉터리 서비스에 사용
    // 여기서는 내부 서버의 로그인 데이터 저장용으로 사용되었음
    implementation 'org.springframework.ldap:spring-ldap-core'
    implementation 'org.springframework.security:spring-security-ldap'
    implementation 'com.unboundid:unboundid-ldapsdk'*/

    // Redis
    implementation 'org.springframework.boot:spring-boot-starter-data-redis'

    // RabbitMQ
    implementation 'org.springframework.boot:spring-boot-starter-amqp'

    // validated
    implementation 'org.springframework.boot:spring-boot-starter-validation'

    // actuator
//    implementation 'org.springframework.boot:spring-boot-starter-actuator'

    // spring batch
    implementation 'org.springframework.boot:spring-boot-starter-batch'
    runtimeOnly 'org.hsqldb:hsqldb' // H2DB 는 주석처리 필요

/*    // security
    implementation 'org.springframework.boot:spring-boot-starter-security'
    // thymeleaf + security 통합
    implementation 'org.thymeleaf.extras:thymeleaf-extras-springsecurity6:3.1.1.RELEASE'
    implementation 'org.springframework.security:spring-security-test'*/

    // jsp
    implementation 'javax.servlet:jstl'
    implementation 'org.apache.tomcat.embed:tomcat-embed-jasper'
}

tasks.named('test') {
    useJUnitPlatform()
}
